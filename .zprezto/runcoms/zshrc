unset GREP_OPTIONS
# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...

function command_stat {
    history | awk '{print $2}' | awk 'BEGIN {FS="|"} {print $1}' | sort | uniq -c | sort -r
}

function build_js() {
    (cd /home/bernat/git/reco/modules/static;
        date +'rebuild js at %Y-%m-%d %H:%M:%S.%N'
        ./gradlew build -Pcustomer=$1 -Phud=true && \
        mkdir -p /opt/tmp/jsapi/proxy/$1 &&  \
        rm -v -rf /opt/tmp/jsapi/proxy/$1 && \
        cp -vanR build/personalize-$1/js/$1 /opt/tmp/jsapi/proxy/ && \
        chmod -v  -R 777  /opt/tmp/jsapi/proxy/$1
        date +'done js rebuild at %Y-%m-%d %H:%M:%S.%N'
    )
}

function prx(){
    build_js $1
    while inotifywait -e close_write  /home/bernat/git/reco/modules/reco/custom/js/$1.js; do
        build_js $1
    done
}

function mit(){
    which mitmproxy
    killall -9 mitmproxy 
    mitmproxy -v --host -p 3333 -s ~/.mitm.py 
}
ssh() {
    if [[ $# == 0 || -z $TMUX ]]; then
        command ssh $@
        return
    fi
    # The hostname is the last parameter (i.e. ${(P)#})
    local remote=${${(P)#}%.*}
    local old_name="$(tmux display-message -p '#W')"
    local renamed=0
    # Save the current name
    if [[ $remote != -* ]]; then
        renamed=1
        tmux rename-window $remote
    fi
    command ssh $@
    if [[ $renamed == 1 ]]; then
        tmux rename-window "$old_name"
    fi
}

export MARKPATH=$HOME/.marks
function to { 
    cd -P "$MARKPATH/$1" 2>/dev/null || echo "No such mark: $1"
}
function bm { 
    mkdir -p "$MARKPATH"; ln -s "$(pwd)" "$MARKPATH/$1"
}
function ubm { 
    rm -i "$MARKPATH/$1"
}
function bms {
    ls -l "$MARKPATH" | sed 's/  / /g' | cut -d' ' -f9- | sed 's/ -/\t-/g' && echo
}

function _completemarks {
  reply=($(ls $MARKPATH))
}

compctl -K _completemarks to
compctl -K _completemarks ubm

autoload bashcompinit
bashcompinit

alias g='git'
complete -o default -o nospace -F _git g
alias pi="sudo pacman --noconfirm -S"
alias yi="yaourt --noconfirm -S"
alias lsa="la -alth"
alias b="(to reco; cd grrec;  ant dist) "
alias cb="(to reco; cd grrec;  ant clean dist)"
connect_via_mosh(){
 mosh $1 -- tmux attach || mosh $1 -- tmux
}
s(){
    re='^[0-9]+$'
    c_s=$(echo "$1" | sed -E 's/([a-z]).*/\1/g')
    dest=$(echo "$1" | sed -E 's/[a-z](.*)/\1/g')
    if [[ $dest =~ $re ]] ; then
        dest="app${dest}"
    fi
    case $c_s in
        b)
            cluster='bud' ;;
        n)
            cluster='nrt' ;;
        a)
            cluster='ams' ;;
        *) 
            echo "No cluster for ${BASH_REMATCH[1]}"
            return
    esac
    server="${cluster}-${dest}.int.gravityrd.com"
    ssh "${server}"
}
connect_via_ssh(){
 ssh $1 -- tmux attach || ssh $1 -- tmux
}
alias m=connect_via_mosh
alias c=connect_via_ssh

function deployCp2(){
for var in "$@"
do
    echo "Doing $var"
    cluster=$(curl -s "registry.int.gravityrd.com/customers/$var" | jshon -e data -e proxy_cluster_name -u)
    case $cluster in
        bud)
            dest='bud-app1' ;;
        ams)
            dest='bud-app1' ;;
        sin)
            dest='sin-app2' ;;
        *) 
            echo "No cluster"
            dest='bud-app1' ;;
    esac
    (cd ~/git/cp2  && \
    ./gradlew warFatJs -Pcustomer=$var && \
    echo "cluster($cluster)" copy build/libs/cp2-fat-0.4.war "${dest}.int.gravityrd.com:/var/lib/tomcat8/webapps/$var.war" && \
    rsync --progress --rsync-path="sudo rsync" build/libs/cp2-fat-0.4.war "${dest}.int.gravityrd.com:/var/lib/tomcat8/webapps/$var.war")
done
}
alias dcp2=deployCp2
alias sb=subl3
alias t=task
alias yu=yaourt -Syyuaa --noconfirm --aur-url https://aur4.archlinux.org
function pr_change(){
    date_to_check=$1
    if [ -z "$1" ]
    then
        date_to_check="yesterday"
    fi
    git log --after="$date_to_check"  --pretty=oneline --name-only  | sed -n -r  's_customers/(.*)_\1_gp' | sort | uniq | tr '/' '\t' | awk -F '\t' '
$1==x{
    printf ",%s", $2
    next
}
{
    x=$1
    printf "\n%s|%s", $1, $2
}
END {
    printf "\n"
}'
}

export EDITOR=vim
